{
	// Place your fhxParser workspace snippets here. Each snippet is defined under a snippet name and has a scope, prefix, body and 
	// description. Add comma separated ids of the languages where the snippet is applicable in the scope field. If scope 
	// is left empty or omitted, the snippet gets applied to all languages. The prefix is what is 
	// used to trigger the snippet and the body will be expanded and inserted. Possible variables are: 
	// $1, $2 for tab stops, $0 for the final cursor position, and ${1:label}, ${2:another} for placeholders. 
	// Placeholders with the same ids are connected.
	// Example:
	// "Print to console": {
	// 	"scope": "javascript,typescript",
	// 	"prefix": "log",
	// 	"body": [
	// 		"console.log('$1');",
	// 		"$2"
	// 	],
	// 	"description": "Log output to console"
	// }

	"Ots Vue" : {
		"scope": "vue",
		"prefix": "otsVue",
		"body": [
			"<template>",    		
			"\t${1}${0}",    		
			"</template>",
			"<script setup>",
			"\t${2}",
			"</script>",
			"<style lang='css' scoped>",
			"\t${3}",
			"</style>",
		]
	},
	"Ots Start CSS": {
		"scope": "css, scss",
		"prefix": "otsCss",
		"body": [
			"* {",
			"  \tmargin: 0;",
			"  \tpadding: 0;",
			"  \tbox-sizing: border-box;",
			"  }",
			"html {",
			"      \tfont-size: 62.5%;",
			"   }",
			"body {",
			"      \tfont-size: 16rem;",
			"   }",		
		]
	},
	"Ots Golang Start": {
		"scope": "go",
		"prefix": "otsGo",
		"body": [
			"package ${1:main}",
			"",
			"import \"fmt\"",
			"",
			"func main() {",
			"\tfmt.Println(\"Hallo, Welt\")",
			"}"
		]
	},
	"Ots Golang Struct": {
		"scope": "go",
		"prefix": "otsStruct",
		"body": [		
			"type ${1:name} struct {",
			"\t${2:variable}\t${3:type}",
			"}"
		]
	},
	"Ots Golang Struct JSON": {
		"scope": "go",
		"prefix": "otsStructJS",
		"body": [		
			"type ${1:name} struct {",
			"\t${2:variable}\t${3:string}\t`json:\"name\"`",
			"}"
		]
	},
	"Ots Golang range": {
		"scope": "go",
		"prefix": "otsFor",
		"body": [		
			"for ${1:_}, ${2:val} := range ${3:list} {",
			"\t${0}",
			"}"
		]
	},
	"Ots Error": {
		"scope": "go",
		"prefix": "otsErr",
		"body": [		
			"if err != nil {",
			"app.errorLog.Println(err)",
			"\tlog.Fatal(\"${1}\")",
			"}",
		]
	},
}