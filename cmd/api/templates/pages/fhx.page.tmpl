{{template "base" .}}

{{ define "title" }}
    Delta-V Daten Hochladen
{{ end }}

{{ define "content" }} 

    <div class="fileLoad">
        <h3 id="fileLoad-title"></h3>            
        <form action="" mehode="POST">
            <div class="fileLoad-control">
                <input type="file" 
                class="fileLoad-input" 
                id="fhxFile" 
                name="fhxFile" 
                onchange="upload(event)" 
                accept=".fhx">
                <label for="fhxFile">
                    <img height="32" width="32" src="../assets/images/icons/download.svg" >FHX-Datei</label>
            </div>
        </form>
        <div class="fileLoad-details">
            <span class="fileLoad-details-title">none</span>
            <span class="fileLoad-details-count">Grösse: 0</span>
        </div>
        <div class="fileLoad-text">
            Laden Sie eine fhx Datei von einer Opertion, Unitprocedure oder Rezept, von ihrem PC hoch. Diese wird gespeichert und die Daten können dann bearbeitet werden.
        </div>
        <button class="btn" id="upload-file" disabled>Datei hochladen...</button>
    </div>

{{ end }}

{{ define "js" }}
<script>
const plantItems = document.getElementById('plantSelectItem');
document.getElementById('fileLoad-title'). innerHTML = `Betrieb: ${plant.plantName}`
const fhxFile = document.getElementById('fhxFile');
const fhxText = document.querySelector('.fileLoad-text')
const uploadFile = document.getElementById('upload-file')

if (plant.pantId !== "") {
    fhxFile.style.backgroundColor = "red"
   
    function upload(e) {
            
            const files = e.target.files || e.dataTransfer.files;
            if (!files.length) return;
            const file = files[0].name;           
            let text = ""
            const fr = new FileReader();
            fr.onload = async () => {
                text = fr.result;      
                // Daten und der Inhalt des Textfiles an Objekt übergeben
                const data = { 
                        text: text, 
                        name: file, 
                        plant_id: plant.plantId }

                const requestOptions = {
                    method: "POST",
                    headers: { "Content-Type": "application/json" },
                    body: JSON.stringify(data),
                };

                const title = readTitleName(text, "BATCH_RECIPE NAME=")
                document.querySelector(".fileLoad-details-count")
                    .textContent = `Grösse: ${text.length}`
                document.querySelector(".fileLoad-details-title")
                    .textContent = title
                fhxText.innerHTML = `${text.substring(0, 550)}...`
                uploadFile.disabled = false
                uploadFile.addEventListener('click', e => {
                    console.log(data)
                    // Hier die Daten auf den Server Laden!
                })
            }
            fr.readAsText(files[0]);
        }
}
    
    
</script>
{{end}}